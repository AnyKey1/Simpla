"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

////////// Responsive
// Breackpoints
var breakpoints = {
  xl: 1200,
  lg: 992,
  md: 768,
  sm: 576,
  xsm: 375
}; // Media quares

var MQ = {
  wWidth: 0,
  isXL: false,
  isLG: false,
  isMD: false,
  isSM: false,
  isXSM: false,
  updateState: function updateState() {
    this.wWidth = $(window).width();

    for (var key in breakpoints) {
      this['is' + key.toUpperCase()] = this.wWidth <= breakpoints[key];
    }
  }
};
MQ.updateState();
$(window).on('resize', function () {
  MQ.updateState();
}); ////////// Common functions
// Popup opener

$('.js-popup').click(function (event) {
  event.preventDefault();
  var popupID = $(this).attr('href');
  mfpPopup(popupID);
}); // Mobile menu toggle

$('.js-menu').click(function () {
  $(this).toggleClass('is-active');
  $('.nav').toggleClass('opened');
  $('.search').removeClass('opened');
});
$('.js-search').click(function () {
  $('.search').toggleClass('opened');
  $('.nav').removeClass('opened');
});
$('.search-closed').click(function () {
  $('.search').removeClass('opened');
}); // Phone input mask

$('input[type="tel"]').inputmask({
  mask: '+7 (999) 999-99-99',
  showMaskOnHover: false
}); // E-mail Ajax Send

$('form').submit(function (e) {
  e.preventDefault();
  var form = $(this);
  var formData = {};
  formData.data = {}; // Serialize

  form.find('input, textarea').each(function () {
    var name = $(this).attr('name');
    var title = $(this).attr('data-name');
    var value = $(this).val();
    formData.data[name] = {
      title: title,
      value: value
    };

    if (name === 'subject') {
      formData.subject = {
        value: value
      };
      delete formData.data.subject;
    }
  });
  $.ajax({
    type: 'POST',
    url: 'mail/mail.php',
    dataType: 'json',
    data: formData
  }).done(function (data) {
    if (data.status === 'success') {
      if (form.closest('.mfp-wrap').hasClass('mfp-ready')) {
        form.find('.form-result').addClass('form-result--success');
      } else {
        mfpPopup('#success');
      }

      setTimeout(function () {
        if (form.closest('.mfp-wrap').hasClass('mfp-ready')) {
          form.find('.form-result').removeClass('form-result--success');
        }

        $.magnificPopup.close();
        form.trigger('reset');
      }, 3000);
    } else {
      alert('Ajax result: ' + data.status);
    }
  });
  return false;
}); ////////// Ready Functions

$(document).ready(function () {//
}); ////////// Load functions

$(window).on('load', function () {// 
}); /////////// mfp popup - https://dimsemenov.com/plugins/magnific-popup/

var mfpPopup = function mfpPopup(popupID, source) {
  $.magnificPopup.open({
    items: {
      src: popupID
    },
    type: 'inline',
    fixedContentPos: false,
    fixedBgPos: true,
    overflowY: 'auto',
    closeBtnInside: true,
    preloader: false,
    midClick: true,
    removalDelay: 300,
    closeMarkup: '<button type="button" class="mfp-close">&times;</button>',
    mainClass: 'mfp-fade-zoom' // callbacks: {
    // 	open: function() {
    // 		$('.source').val(source);
    // 	}
    // }

  });
};

$('.slick-home').slick({
  slidesToShow: 1,
  slidesToScroll: 1,
  dots: true,
  speed: 500,
  fade: true,
  cssEase: 'linear',
  arrows: false,
  customPaging: function customPaging(slider, i) {
    var thumb = $(slider.$slides[i]).data();
    var $num = $('.num-num');
    var $num1 = slider.slideCount;
    $num.text(+$num1);
  }
});
var $status = $('.slick-home__num');
var $slickElement = $('.slick-home');
$slickElement.on('init reInit afterChange', function (event, slick, currentSlide, nextSlide) {
  //currentSlide is undefined on init -- set it to 0 in this case (currentSlide is 0 based)
  var i = (currentSlide ? currentSlide : 0) + 1;
  $status.text(i + ' / ' + slick.slideCount);
  console.log(slick.slideCount);
});
$('.catalog__side-bar_check').hide();
$('.catalog__side-bar_list h5').click(function (e) {
  e.preventDefault();
  var $this = $(this);
  $this.parent().next().slideToggle(300);
});
$('.catalog__search_check').hide();
$('.catalog__search_list h6').click(function (e) {
  e.preventDefault();
  var $this = $(this);
  $this.parent().next().slideToggle(300);
});
$('.product-wrap__slide-info').slick({
  slidesToShow: 1,
  slidesToScroll: 1,
  arrows: false,
  dots: false,
  infinite: false,
  fade: true,
  asNavFor: '.product-wrap__slide-right'
});
$('.product-wrap__slide-right').slick({
  slidesToShow: 4,
  slidesToScroll: 1,
  asNavFor: '.product-wrap__slide-info',
  dots: false,
  arrows: false,
  centerMode: false,
  infinite: false,
  focusOnSelect: true,
  vertical: true,
  verticalSwiping: true
});

var TabList =
/*#__PURE__*/
function () {
  function TabList(buttonsContainer, tabs) {
    var _this = this;

    _classCallCheck(this, TabList);

    this.buttonsContainer = buttonsContainer;
    this.tabs = tabs;
    this.buttonsContainer.addEventListener('click', function (event) {
      var index = event.target.closest('.product-tab__title_button').dataset.value;

      _this.openTab(index);
    });
    this.buttonsContainer.addEventListener('click', function (event) {
      var productButton = event.target.closest('.product-tab__title_button').dataset.value;

      _this.openTabButton(productButton);
    });
  }

  _createClass(TabList, [{
    key: "openTabButton",
    value: function openTabButton(productButton) {
      this.buttonsContainer.querySelector('.active').classList.remove('active');
      this.buttonsContainer.querySelector(".tab--".concat(productButton)).classList.add('active');
    }
  }, {
    key: "openTab",
    value: function openTab(index) {
      this.tabs.querySelector('.active').classList.remove('active');
      this.tabs.querySelector(".tab--".concat(index)).classList.add('active');
    }
  }]);

  return TabList;
}();

;
document.addEventListener('DOMContentLoaded', function () {
  var buttonsContainer = document.querySelector('.product-tab__title');
  var tabs = document.querySelector('.product-tab__text');
  var tabList = new TabList(buttonsContainer, tabs);
});
$(document).ready(function () {
  $('.numberLeft').click(function () {
    var $input = $(this).parent().find('input');
    var count = parseInt($input.val()) - 1;
    count = count < 1 ? 1 : count;
    $input.val(count);
    $input.change();
    return false;
  });
  $('.numberRight').click(function () {
    var $input = $(this).parent().find('input');
    $input.val(parseInt($input.val()) + 1);
    $input.change();
    return false;
  });
});